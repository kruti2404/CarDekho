@using Task1.DTO;
@model Task1.ViewModel.VehicleViewModel
@{
	ViewBag.Title = "Index";
	var selectedValues = string.IsNullOrEmpty(Model.Query.MultiFilter as string)
					? new List<string>()
					: (Model.Query.MultiFilter as string).Split(',').ToList();

}

<div class="container ">
	<h2 class="text-center mb-4">Vehicles</h2>

	<!-- Filter Form -->
	<form id="filterForm" asp-action="Index" asp-controller="Vehicles" method="get" class="mb-4">
		<input type="hidden" name="Query.PageSize" value="@Model.Query.PageSize" />
		<input type="hidden" name="Query.SearchTerm" value="@Model.Query.SearchTerm" />
		<div class="d-flex gap-3 align-items-center flex-wrap">


			@Html.DropDownListFor(model => model.Query.SingleFilter, Model.CategoryList, new { @class = "form-select form-select-sm w-auto" })

			<select id="MultiSelectFilter" multiple class="form-control" style="width:20%">

				@foreach (var item in Model.BrandList as IEnumerable<string>)
				{
					var isSelected = selectedValues.Contains(item);
					<option value="@item">@item</option>
				}
			</select>

			<input type="hidden" name="Query.MultiFilter" id="MultiFilterHidden" value="@Model.Query.MultiFilter" />

			<!--Radio button-->
			<div class="d-flex flex-column m-2 p-3">

				@foreach (StockAvailability value in Enum.GetValues(typeof(StockAvailability)))
				{
					var isChecked = Model.Query.StockAvail == value;
					<span class="p-2">
						<input type="radio"
							   name="Query.StockAvail"
							   id="@value"
							   value="@value"
						@(isChecked ? "checked" : "") />
						<label for="@value" style="width:fit-content;">@value.GetDescription()</label>
					</span>
				}
			</div>

			<!-- CheckBox button-->
			<div class="Checkbox">
				<div class="check-group">

					@for (int i = 0; i < Model.ColoursOptionList.Count; i++)
					{
						var item = Model.ColoursOptionList[i];
						var isChecked = Model.Query.ColoursList != null && Model.Query.ColoursList.Contains(item);

						<span class="checkbox" for="colorCheckbox_@i">
							<input class="checkbox__input color-checkbox"
								   type="checkbox"
								   value="@item"
								   id="colorCheckbox_@i"
							@(isChecked ? "checked" : "") />

							<span class="checkbox__label">@item</span>
						</span>
					}

					<!-- This is the field that will be submitted -->
					<input type="hidden" id="ColoursListHidden" name="Query.ColoursList" value="" />

					<div class="check-group__result">Options chosen:</div>
				</div>
			</div>

			<!-- Range Slider -->
			<input type="hidden" name="Query.MinPrice" id="minPrice" value="@Model.Query.MinPrice" />
			<input type="hidden" name="Query.MaxPrice" id="maxPrice" value="@Model.Query.MaxPrice" />

			<div class="wrapper my-4">
				<div class="container">
					<div id="slider-wrapper">
						<div id="slider-range"></div>
						<div class="range mx-3"></div>

						<div class="range-wrapper">
						</div>

					</div>

				</div>
			</div>

			<!-- Rating filter  -->
			<div class="Rating-Filtter">

				<label class="rating-label">
					<input class="rating"
						   max="5"
						   name="Query.Rating"
						   oninput="this.style.setProperty('--value', this.value)"
						   step="1"
						   style="--stars:5;--value:@Model.Query.Rating"
						   type="range"
						   value="@Model.Query.Rating">
				</label>

			</div>


		</div>
		<button type="submit" class="btn btn-sm btn-primary">Apply Filters</button>

	</form>
	<br />
	<!-- Search Form -->
	<form asp-action="Index" asp-controller="Vehicles" method="get" class="mb-4">
		<div class="input-group w-100 mx-auto" style="width:100%;">
			<input type="hidden" name="Query.PageSize" value="@Model.Query.PageSize" />
			<input type="hidden" name="Query.SingleFilter" value="@Model.Query.SingleFilter" />
			<input type="hidden" name="Query.MultiFilter" value="@Model.Query.MultiFilter" />
			<input type="hidden" name="Query.ColoursList" value="@Model.Query.ColoursList" />
			<input type="hidden" name="Query.MinPrice" value="@Model.Query.MinPrice" />
			<input type="hidden" name="Query.MaxPrice" value="@Model.Query.MaxPrice" />
			<input type="hidden" name="Query.Rating" value="@Model.Query.Rating" />
			<input type="hidden" name="Query.StockAvail" value="@Model.Query.StockAvail" />

			<input type="text" class="form-control" placeholder="Search..." name="Query.SearchTerm" value="@Model.Query.SearchTerm" />
			<button class="btn btn-outline-secondary" type="submit">
				<i class="bi bi-search"></i>
			</button>
		</div>

	</form>

	<!-- Vehicles Table -->
	<div class="table-responsive">
		<table class="table table-bordered table-hover align-middle text-center">
			<thead class="table-primary">
				<tr>

					@foreach (var column in new[] { "Name", "ModelYear", "Price", "Rating" })
					{
						<th class="text-start" style="width: 5%">
							<div class="d-flex align-items-center justify-content-between gap-2">
								<span>@column</span>
								<a class="btn btn-sm p-0 border-0 bg-transparent"
								   asp-route-Query.PageNumber="@Model.Query.PageNumber"
								   asp-route-Query.PageSize="@Model.Query.PageSize"
								   asp-route-Query.SearchTerm="@Model.Query.SearchTerm"
								   asp-route-Query.SingleFilter="@Model.Query.SingleFilter"
								   asp-route-Query.MultiFilter="@Model.Query.MultiFilter"
								   asp-route-Query.MinPrice="@Model.Query.MinPrice"
								   asp-route-Query.MaxPrice="@Model.Query.MaxPrice"
								   asp-route-Query.ColoursList="@Model.Query.ColoursList"
								   asp-route-Query.Rating="@Model.Query.Rating"
								   asp-route-Query.StockAvail="@Model.Query.StockAvail"
								   asp-route-Query.SortColumn="@column"
								   asp-route-Query.SortDirection="@(Model.Query.SortDirection == "ASC" ? "DESC" : "ASC")">
									<i class="bi @(Model.Query.SortDirection == "ASC" ? "bi-sort-up" : "bi-sort-down")"></i>
								</a>
							</div>
						</th>
					}
					<th class="text-center">Description</th>
					<th class="text-center">Category</th>
					<th class="text-center">Brand</th>
					<th class="text-center">Quantity</th>
					<th class="text-center">Colours Available</th>

					<th class="text-center">Action</th>
				</tr>
			</thead>

			<tbody>
				@if (Model.Vehicles.Any())
				{
					foreach (var vehicle in Model.Vehicles)
					{
						<tr>
							<td>@vehicle.Name</td>
							<td>@vehicle.ModelYear</td>
							<td>₹@Math.Floor(vehicle.Price)</td>
							<td>
								@for (int i = 1; i <= 5; i++)
								{
									if (i <= vehicle.Rating)
									{
										<span class="text-warning">&#9733;</span>
									}
									else
									{
										<span class="text-muted">&#9734;</span>
									}
								}
							</td>
							<td class="text-start">@vehicle.Description</td>
							<td>@vehicle.CategoryName</td>
							<td>@vehicle.BrandName</td>
							<td>@vehicle.Quantity</td>
							<td>@vehicle.ColoursNames</td>
							<td>
								<a href="#" class="text-primary me-2" title="Details">
									<i class="bi bi-list"></i>
								</a>
								<a href="#" class="text-danger" title="Delete">
									<i class="bi bi-trash3-fill"></i>
								</a>
							</td>
						</tr>
					}
				}
				else
				{
					<tr>
						<td colspan="8" class="text-muted text-center">No results found.</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	<!-- Pagination + Page Size -->
	<div class="d-flex justify-content-between align-items-end mt-4 flex-wrap gap-3">
		<nav>
			<ul class="pagination pagination-sm mb-0">
				<li class="page-item @(Model.Query.PageNumber <= 1 ? "disabled" : "")">
					<a class="page-link" asp-route-Query.PageNumber="1"
					   asp-route-Query.PageSize="@Model.Query.PageSize"
					   asp-route-Query.SearchTerm="@Model.Query.SearchTerm"
					   asp-route-Query.SingleFilter="@Model.Query.SingleFilter"
					   asp-route-Query.MultiFilter="@Model.Query.MultiFilter"
					   asp-route-Query.MinPrice="@Model.Query.MinPrice"
					   asp-route-Query.MaxPrice="@Model.Query.MaxPrice"
					   asp-route-Query.StockAvail="@Model.Query.StockAvail"
					   asp-route-Query.Rating="@Model.Query.Rating"
					   asp-route-Query.ColoursList="@Model.Query.ColoursList"
					   asp-route-Query.SortColumn="@Model.Query.SortColumn"
					   asp-route-Query.SortDirection="@Model.Query.SortDirection">
						Previous
					</a>
				</li>
				<li class="page-item @(Model.Query.PageNumber == 1 ? "active" : "")">
					<a class="page-link" asp-route-Query.PageNumber="@(Model.Query.PageNumber - 1)"
					   asp-route-Query.PageSize="@Model.Query.PageSize"
					   asp-route-Query.SearchTerm="@Model.Query.SearchTerm"
					   asp-route-Query.SingleFilter="@Model.Query.SingleFilter"
					   asp-route-Query.MultiFilter="@Model.Query.MultiFilter"
					   asp-route-Query.MinPrice="@Model.Query.MinPrice"
					   asp-route-Query.MaxPrice="@Model.Query.MaxPrice"
					   asp-route-Query.StockAvail="@Model.Query.StockAvail"
					   asp-route-Query.Rating="@Model.Query.Rating"
					   asp-route-Query.ColoursList="@Model.Query.ColoursList"
					   asp-route-Query.SortColumn="@Model.Query.SortColumn"
					   asp-route-Query.SortDirection="@Model.Query.SortDirection">
						1
					</a>
				</li>
				@if (Model.TotalPages > 1)
				{

					<li class="page-item @(Model.Query.PageNumber == Model.TotalPages ? "active" : "")">
						<a class="page-link" asp-route-Query.PageNumber="@Model.TotalPages"
						   asp-route-Query.PageSize="@Model.Query.PageSize"
						   asp-route-Query.SearchTerm="@Model.Query.SearchTerm"
						   asp-route-Query.SingleFilter="@Model.Query.SingleFilter"
						   asp-route-Query.MultiFilter="@Model.Query.MultiFilter"
						   asp-route-Query.MinPrice="@Model.Query.MinPrice"
						   asp-route-Query.MaxPrice="@Model.Query.MaxPrice"
						   asp-route-Query.StockAvail="@Model.Query.StockAvail"
						   asp-route-Query.ColoursList="@Model.Query.ColoursList"
						   asp-route-Query.Rating="@Model.Query.Rating"
						   asp-route-Query.SortColumn="@Model.Query.SortColumn"
						   asp-route-Query.SortDirection="@Model.Query.SortDirection">
							@Model.TotalPages
						</a>
					</li>
				}
				<li class="page-item @(Model.Query.PageNumber >= Model.TotalPages ? "disabled" : "")">
					<a class="page-link" asp-route-Query.PageNumber="@(Model.Query.PageNumber + 1)"
					   asp-route-Query.PageSize="@Model.Query.PageSize"
					   asp-route-Query.SearchTerm="@Model.Query.SearchTerm"
					   asp-route-Query.SingleFilter="@Model.Query.SingleFilter"
					   asp-route-Query.MultiFilter="@Model.Query.MultiFilter"
					   asp-route-Query.MinPrice="@Model.Query.MinPrice"
					   asp-route-Query.MaxPrice="@Model.Query.MaxPrice"
					   asp-route-Query.StockAvail="@Model.Query.StockAvail"
					   asp-route-Query.Rating="@Model.Query.Rating"
					   asp-route-Query.ColoursList="@Model.Query.ColoursList"
					   asp-route-Query.SortColumn="@Model.Query.SortColumn"
					   asp-route-Query.SortDirection="@Model.Query.SortDirection">
						Next
					</a>
				</li>
			</ul>
		</nav>

		<form method="get" class="d-flex align-items-center">
			<input type="hidden" name="Query.SearchTerm" value="@Model.Query.SearchTerm" />
			<input type="hidden" name="Query.SingleFilter" value="@Model.Query.SingleFilter" />
			<input type="hidden" name="Query.MultiFilter" value="@Model.Query.MultiFilter" />
			<input type="hidden" name="Query.ColoursList" value="@Model.Query.ColoursList" />
			<input type="hidden" name="Query.MinPrice" value="@Model.Query.MinPrice" />
			<input type="hidden" name="Query.MaxPrice" value="@Model.Query.MaxPrice" />
			<input type="hidden" name="Query.Rating" value="@Model.Query.Rating" />



			<input type="hidden" name="Query.StockAvail" value="@Model.Query.StockAvail" />

			<label class="me-2 mb-0">Page Size:</label>
			@Html.DropDownList("Query.PageSize", (List<SelectListItem>)Model.PageSizeList,
							new { @class = "form-select form-select-sm w-auto me-2", onchange = "this.form.submit();" })

		</form>
	</div>
</div>

<script>
	$(function () {
		const selected = "@Html.Raw(Model.Query.MultiFilter)";
		if (selected) {
			const values = selected.split(",");
			$("#MultiSelectFilter").val(values).trigger("change");
		}

		$("#MultiSelectFilter").select2({
			placeholder: "Select Brands",
			allowClear: true
		});

		// Multi-select hidden value
		$("#filterForm").on("submit", function () {
			var selectedBrands = $("#MultiSelectFilter").val();
			$("#MultiFilterHidden").val(selectedBrands ? selectedBrands.join(",") : "");

			const selectedColours = [];

			$(".color-checkbox:checked").each(function () {
				selectedColours.push($(this).val());
			});

			$("#ColoursListHidden").val(selectedColours.join(","));

			// Search text
			$("#SearchTerm").val($("#SearchBox").val());
		});


	});

</script>